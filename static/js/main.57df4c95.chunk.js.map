{"version":3,"sources":["UserInput.js","Bookmark.js","BookmarkList.js","App.js","reportWebVitals.js","index.js"],"names":["UserInput","state","name","url","updateName","event","setState","target","value","updateUrl","handleSubmit","preventDefault","props","addBookmark","Form","onSubmit","this","Stack","gap","Control","type","placeholder","onChange","Button","variant","Component","Bookmark","className","Card","Header","Body","onClick","removeBookmark","index","BookmarkList","bookmarks","map","App","newBookmarks","localStorage","setItem","JSON","stringify","clickedIndex","filter","_","storage","getItem","parse","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57df4c95.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// Bootstrap imports\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Stack from 'react-bootstrap/Stack';\r\n\r\nclass UserInput extends Component {\r\n    state = {\r\n        name : \"\",\r\n        url : \"\"\r\n    }\r\n\r\n    updateName = (event) => {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n\r\n    updateUrl = (event) => {\r\n        this.setState({ url: event.target.value });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Adds bookmark\r\n        this.props.addBookmark(this.state.name, this.state.url);\r\n\r\n        // Resets state\r\n        this.setState({ name : \"\", url : \"\"})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Stack gap={3}>\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"Name\" \r\n                        value={this.state.name}\r\n                        onChange={this.updateName}\r\n                    />\r\n                    <Form.Control \r\n                        type=\"text\" \r\n                        placeholder=\"URL\"\r\n                        value={this.state.url}\r\n                        onChange={this.updateUrl}\r\n                    />\r\n                    <Button variant=\"primary\" type=\"submit\">Add bookmark</Button>\r\n                </Stack>     \r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserInput;","// Handles the JSX for an individual Bookmark\r\n\r\n// Bootstrap imports\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Bookmark = (props) => {\r\n    const deleteByIndex = () => props.removeBookmark(props.index);\r\n\r\n    return (\r\n        <div className=\"col-12 col-md-6\">\r\n            <Card className=\"m-2\">\r\n                <Card.Header>\r\n                    <h5>{props.name}</h5></Card.Header>\r\n                <Card.Body>\r\n                    <p>{props.url}</p>\r\n                    <Button \r\n                        type=\"button\" \r\n                        variant=\"danger\"\r\n                        onClick={deleteByIndex}\r\n                    >Delete</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bookmark;","import Bookmark from \"./Bookmark\";\r\n\r\n// Creates list of bookmarks\r\nconst BookmarkList = (props) => {\r\n   \r\n    // Creates a bookmark element for each\r\n    // item in props.bookmarks\r\n    return (\r\n        <>\r\n          {props.bookmarks.map(({ name, url }, index) => (\r\n            <Bookmark \r\n                name={name}\r\n                url={url}\r\n                index={index}\r\n                removeBookmark={props.removeBookmark}\r\n            />\r\n          ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BookmarkList;","import React, { Component } from 'react';\nimport './App.css';\nimport UserInput from './UserInput';\nimport BookmarkList from './BookmarkList';\n\n// Bootstrap imports\nimport Card from 'react-bootstrap/Card';\nimport Stack from 'react-bootstrap/Stack';\nimport Row from 'react-bootstrap/Row';\n\nclass App extends Component {\n  state = {\n    bookmarks: []\n  }\n\n  componentDidMount() {\n        // Gets local storage\n        const storage = localStorage.getItem(\"bookmarks\");\n\n        if (storage !== null)\n          this.setState({ bookmarks: JSON.parse(storage) });\n  }\n\n  addBookmark = (name, url) => {\n    const newBookmarks = [{name, url}, ...this.state.bookmarks];\n    this.setState({ bookmarks: newBookmarks });\n\n    // sets local storage\n    localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n  }\n\n  removeBookmark = (clickedIndex) => {\n    // Filters all bookmark elements that don't match selected index\n    const filterCallback = (_, index) => index !== clickedIndex;\n    const newBookmarks = this.state.bookmarks.filter(filterCallback);\n    this.setState({ bookmarks: newBookmarks });\n\n    // sets local storage\n    localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Card className=\"p-4 w-75 bg-light\">\n            <UserInput addBookmark={this.addBookmark} />\n          </Card>\n        </header>\n        <main className=\"App-main pb-5\">\n          <h3>Saved bookmarks</h3>\n          <Stack gap={3} >\n            <Row className=\"m-3\">\n              <BookmarkList bookmarks={this.state.bookmarks} removeBookmark={this.removeBookmark} />\n            </Row> \n          </Stack>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}